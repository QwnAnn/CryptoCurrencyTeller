home.html<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CryptoCurrencyTeller</title>
  <link rel="stylesheet" href="{% static 'style.css' %}">
</head>
<body>
  
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="{% url 'home' %}">CryptoCurrencyTeller</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  
    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
      <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
        <li class="nav-item active">
          <a class="nav-link" href="{% url 'home' %}">Home </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="https://www.businessinsider.in/investment/news/cryptocurrency-faqs-everything-you-need-to-know-about-the-cryptocurrencies-the-crypto-market-and-everything-in-between/articleshow/87465186.cms">About Project</a>
        </li>
        
      </ul>
      
   
  </nav>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
 
  <div class="jumbotron bg-cover text-white" style="background-image: linear-gradient(to bottom, rgba(0,0,0,0.6) 0%,rgba(0,0,0,0.6) 100%), url(https://placeimg.com/1000/480/nature)">
    <div class="jumbotron container">
     
   <br>
      <h1 class="display-4">Dive into the $$$ pool today!</h1>
      <p class="lead">Predict peaks in the market with precision. </p>
      <hr class="my-4">
      <p>Analysing market conditions to serve an accurate prediction model.</p>
      <p class="lead">
        <a class="btn btn-primary btn-lg" href="https://accounts.binance.com/en/login?return_to=aHR0cHM6Ly93d3cuYmluYW5jZS5jb20vZW4%3D" role="button">Let's get Started!</a>
      </p>
       <br>
       <br>
       <br>
       
       <br>
       <table class="table table-hover table-dark">
        <thead>
          <tr>
            <th scope="col">Name</th>
            <th scope="col">Symbol</th>
            <th scope="col">Stats</th>
            
          </tr>
        </thead>
        <tbody>
          <tr>
          
            <td>Bitcoin</td>
            <td>BTC/USDT</td>
            <td><a class="btn btn-outline-info" href="{% url 'Bitcoin' %}" role="button">Info</a></td>
          </tr>
          <tr>
         
            <td>Ethereum</td>
            <td>ETH/USDT</td>
            <td><a class="btn btn-outline-info" href="{% url 'Ethereum' %}" role="button">Info</a></td>
          </tr>
          <tr>
           
            <td>Ripple</td>
            <td>XRP/USDT</td>
            <td><a class="btn btn-outline-info" href="{% url 'Ripple' %}" role="button">Info</a></td>
          </tr>
          <tr>
          
            <td>Aave</td>
            <td>AAVE/USDT</td>
            <td><a class="btn btn-outline-info" href="{% url 'Aave' %}" role="button">Info</a></td>
          </tr>
          <tr>
            
            <td>Dogecoin</td>
            <td>DOGE/USDT</td>
            <td><a class="btn btn-outline-info" href="{% url 'Dogecoin' %}" role="button">Info</a></td>
          </tr>
        </tbody>
      </table>
      <br> 
      
      </div>
</body>
</html>




home1.html<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bitcoin Analysis</title>
    <link rel="stylesheet" href="{% static 'style.css' %}">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="{% url 'home' %}">CryptoCurrencyTeller</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
      
        <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
          <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
            <li class="nav-item active">
              <a class="nav-link" href="{% url 'home' %}">Home </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="https://www.businessinsider.in/investment/news/cryptocurrency-faqs-everything-you-need-to-know-about-the-cryptocurrencies-the-crypto-market-and-everything-in-between/articleshow/87465186.cms">About Project</a>
            </li>
            
          </ul>
       
      </nav>
    
    <br>
    
    <img src="{% static 'plot1.png' %}" alt=""  height="600" width="1000" style="float : left">
   <div class="jumbotron">
    <br>
    
    
      <h1 class="lead">Bitcoin today is expected to peak at:</h1>
      
      <h1 class="display-10"> $ {{data}}</h1>  </div>
    <br>
    <br><br><br>
   
    
    <br>
    <h1 class="display-6">Do you want to buy Bitcoin today?</h1>
    <br> <br><br>
   
    <br><a class="btn btn-outline-success btn-lg" href="{% url 'pBit' %}" role="button" style="float : left; margin-right:15px;">Place Order</a>
    <a class="btn btn-outline-danger btn-lg" href="{% url 'upBit' %}" role="button">Not today, just update Databases</a>
  
    <br> <br>
    <br><br>
    <br>
 
    <br>
    <br>
    <br>
    <hr class="my-4">
    
     
       
    
      
   
    </div>
    
    
    
      
</body>
</html>



home2.html<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ethereum Analysis</title>
    <link rel="stylesheet" href="{% static 'style.css' %}">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="{% url 'home' %}">CryptoCurrencyTeller</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  
    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
      <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
        <li class="nav-item active">
          <a class="nav-link" href="{% url 'home' %}">Home </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="https://www.businessinsider.in/investment/news/cryptocurrency-faqs-everything-you-need-to-know-about-the-cryptocurrencies-the-crypto-market-and-everything-in-between/articleshow/87465186.cms">About Project</a>
        </li>
        
      </ul>
   
  </nav>

<br>

<img src="{% static 'plot2.png' %}" alt=""  height="600" width="1000" style="float : left">
<div class="jumbotron">
<br>


  <h1 class="lead">Ethereum today is expected to peak at:</h1>
  
  <h1 class="display-10"> $ {{data}}</h1>  </div>
<br>
<br><br><br>


<br>
<h1 class="display-6">Do you want to buy Ethereum today?</h1>
<br> <br><br>

<br><a class="btn btn-outline-success btn-lg" href="{% url 'pEth' %}" role="button" style="float : left; margin-right:15px;">Place Order</a>
<a class="btn btn-outline-danger btn-lg" href="{% url 'upEth' %}" role="button">Not today, just update Databases</a>
<br> <br>
<br><br>
<br>

<br>
<br>
<br>
<hr class="my-4">

 
   

  

</div>
    
</body>
</html>


home3.html<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ripple Analysis</title>
    <link rel="stylesheet" href="{% static 'style.css' %}">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="{% url 'home' %}">CryptoCurrencyTeller</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  
    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
      <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
        <li class="nav-item active">
          <a class="nav-link" href="{% url 'home' %}">Home </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="https://www.businessinsider.in/investment/news/cryptocurrency-faqs-everything-you-need-to-know-about-the-cryptocurrencies-the-crypto-market-and-everything-in-between/articleshow/87465186.cms">About Project</a>
        </li>
        
      </ul>
   
  </nav>

<br>

<img src="{% static 'plot3.png' %}" alt=""  height="600" width="1000" style="float : left">
<div class="jumbotron">
<br>


  <h1 class="lead">Ripple today is expected to peak at:</h1>
  
  <h1 class="display-10"> $ {{data}}</h1>  </div>
<br>
<br><br><br>


<br>
<h1 class="display-6">Do you want to buy Ripple today?</h1>
<br> <br><br>

<br><a class="btn btn-outline-success btn-lg" href="{% url 'pXrp' %}" role="button" style="float : left; margin-right:15px;">Place Order</a>
<a class="btn btn-outline-danger btn-lg" href="{% url 'upXrp' %}" role="button">Not today, just update Databases</a>
<br> <br>
<br><br>
<br>

<br>
<br>
<br>
<hr class="my-4">

 
   

  

</div>
    
</body>
</html>
home4.html<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aave Analysis</title>
    <link rel="stylesheet" href="{% static 'style.css' %}">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="{% url 'home' %}">CryptoCurrencyTeller</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  
    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
      <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
        <li class="nav-item active">
          <a class="nav-link" href="{% url 'home' %}">Home </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="https://www.businessinsider.in/investment/news/cryptocurrency-faqs-everything-you-need-to-know-about-the-cryptocurrencies-the-crypto-market-and-everything-in-between/articleshow/87465186.cms">About Project</a>
        </li>
        
      </ul>
   
  </nav>

<br>

<img src="{% static 'plot4.png' %}" alt=""  height="600" width="1000" style="float : left">
<div class="jumbotron">
<br>


  <h1 class="lead">Aave today is expected to peak at:</h1>
  
  <h1 class="display-10"> $ {{data}}</h1>  </div>
<br>
<br><br><br>


<br>
<h1 class="display-6">Do you want to buy Aave today?</h1>
<br> <br><br>

<br><a class="btn btn-outline-success btn-lg" href="{% url 'pAave' %}" role="button" style="float : left; margin-right:15px;">Place Order</a>
<a class="btn btn-outline-danger btn-lg" href="{% url 'upAave' %}" role="button">Not today, just update Databases</a>
<br> <br>
<br><br>
<br>

<br>
<br>
<br>
<hr class="my-4">

 
   

  

</div>
</body>
</html>

home5.html<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dogecoin Analysis</title>
    <link rel="stylesheet" href="{% static 'style.css' %}">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="{% url 'home' %}">CryptoCurrencyTeller</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  
    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
      <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
        <li class="nav-item active">
          <a class="nav-link" href="{% url 'home' %}">Home </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="https://www.businessinsider.in/investment/news/cryptocurrency-faqs-everything-you-need-to-know-about-the-cryptocurrencies-the-crypto-market-and-everything-in-between/articleshow/87465186.cms">About Project</a>
        </li>
        
      </ul>
   
  </nav>

<br>

<img src="{% static 'plot5.png' %}" alt=""  height="600" width="1000" style="float : left">
<div class="jumbotron">
<br>


  <h1 class="lead">Dogecoin today is expected to peak at:</h1>
  
  <h1 class="display-10"> $ {{data}}</h1>  </div>
<br>
<br><br><br>


<br>
<h1 class="display-6">Do you want to buy Dogecoin today?</h1>
<br> <br><br>

<br><a class="btn btn-outline-success btn-lg" href="{% url 'pDoge' %}" role="button" style="float : left; margin-right:15px;">Place Order</a>
<a class="btn btn-outline-danger btn-lg" href="{% url 'upDoge' %}" role="button">Not today, just update Databases</a>
<br> <br>
<br><br>
<br>

<br>
<br>
<br>
<hr class="my-4">

 
   

  

</div>
</body>
</html>

settings.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

INSTALLED_APPS = [                           //You'll find a list INSTALLED APPS at first just replace that list with this list,the rest of your settings.py file has already been configured
    'hp.apps.HpConfig',
    'hp1.apps.Hp1Config',
    'hp2.apps.Hp2Config',
    'hp3.apps.Hp3Config',
    'hp4.apps.Hp4Config',
    'hp5.apps.Hp5Config',
    'u1.apps.U1Config',
    'u2.apps.U2Config',
    'u3.apps.U3Config',
    'u4.apps.U4Config',
    'u5.apps.U5Config',
    'p1.apps.P1Config',
    'p2.apps.P2Config',
    'p3.apps.P3Config',
    'p4.apps.P4Config',
    'p5.apps.P5Config',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
main project folder>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.contrib import admin
from django.urls import path,include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',include('hp.urls')),
    path('Bitcoin/',include('hp1.urls')),
    path('Ethereum/',include('hp2.urls')),
    path('Ripple/',include('hp3.urls')),
    path('Avalanche/',include('hp4.urls')),
    path('Dogecoin/',include('hp5.urls')),
    path('upBit/',include('u1.urls')),
    path('upEth/',include('u2.urls')),
    path('upXrp/',include('u3.urls')),
    path('upAave/',include('u4.urls')),
    path('upDoge/',include('u5.urls')),
    path('pBit/',include('p1.urls')),
    path('pEth/',include('p2.urls')),
    path('pXrp/',include('p3.urls')),
    path('pAave/',include('p4.urls')),
    path('pDoge/',include('p5.urls')),
    
]


main project folder>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render

# Create your views here.
def home(request):
    return render(request,'home.html')

hp>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views

urlpatterns=[
    path('',views.home,name='home')
]

hp>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
from django.shortcuts import render

# Create your views here.
def home(request):
    return render(request,'home.html')
    
hp1>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>




from django.urls import path
from . import views


urlpatterns=[
    path('',views.Bitcoin,name='Bitcoin')
]



hp1>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render,HttpResponse
import sqlalchemy
import sqlite3
import pandas
from sklearn import linear_model
import os
import numpy
from selenium import webdriver
from time import sleep

from matplotlib import pyplot
# Create your views here.
def Bitcoin(request):
    os.chdir(r'C:\Users\mohan\Desktop')
    engine=sqlalchemy.create_engine('sqlite:///crypto.db')
    btc=pandas.read_sql('coin_Bitcoin',engine)
    btc=pandas.DataFrame({'Symbol':'BTC','High':btc['High'],'Low':btc['Low'],'Open':btc['Open'],'Volume':btc['Volume'],'Marketcap':btc['Marketcap']})
    btc.to_sql('coin_Bitcoin',engine,if_exists='replace',index=False)
    reg=linear_model.LinearRegression()
    reg.fit(btc[['Low', 'Open', 'Volume', 'Marketcap']],btc.High)
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/bitcoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/bitcoin/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/bitcoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/bitcoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')

    driver.close()

    k=[t1,t2,t3,t4]
    data=float(reg.predict([k]))
    

    pyplot.plot(range(1,11),list(btc.tail(10)['High'].to_numpy()),label="Bitcoin's performance",marker='o',markerfacecolor='blue')
    pyplot.title("Bitcoin's performance over last 10 days:")
    pyplot.ylabel('Price ($)')
    pyplot.xlabel('Days')
    pyplot.grid(True,linewidth=1,linestyle='-.')
    pyplot.legend(loc='upper right')
    pyplot.savefig(r'C:\Users\mohan\Desktop\CryptoCurrencyTeller\CryptoCurrencyTeller\static\plot1.png',dpi=500)
      
    pyplot.close()

    return render(request,'home1.html',{'data':data})

hp2>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


from django.urls import path
from . import views

urlpatterns=[
    path('',views.Ethereum,name='Ethereum')
]

hp2>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render
import sqlite3
import os
import pandas
import sqlalchemy
from sklearn import linear_model
from selenium import webdriver
from time import sleep



# Create your views here.
def Ethereum(request):
    os.chdir(r'C:\Users\mohan\Desktop')
    engine = sqlalchemy.create_engine('sqlite:///crypto.db')
    eth=pandas.read_sql('coin_Ethereum',engine)
    eth=pandas.DataFrame({'Symbol':'ETH','High':eth['High'],'Low':eth['Low'],'Open':eth['Open'],'Volume':eth['Volume'],'Marketcap':eth['Marketcap']})
    eth.to_sql('coin_Ethereum',engine,if_exists='replace',index=False)
    
    reg2 = linear_model.LinearRegression()
    reg2= reg2.fit(eth[['Low', 'Open', 'Volume', 'Marketcap']],eth.High)
    
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/ethereum/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
  

    driver.get("https://in.investing.com/crypto/ethereum/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    
    driver.get("https://coinmarketcap.com/currencies/ethereum/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')
  

    driver.get("https://coinmarketcap.com/currencies/ethereum/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')
   
    
    driver.close()
    k=[t1,t2,t3,t4]
    data=float(reg2.predict([k]))

    from matplotlib import pyplot
    pyplot.plot(range(1,11),list(eth.tail(10)['High'].to_numpy()),label="Ethereum's performance",marker='o',markerfacecolor='blue')
    pyplot.title("Ethereum's performance over last 10 days:")
    pyplot.ylabel('Price ($)')
    pyplot.xlabel('Days')
    pyplot.grid(True,linewidth=1,linestyle='-.')
    pyplot.legend(loc='upper right')
    pyplot.savefig(r'C:\Users\mohan\Desktop\CryptoCurrencyTeller\CryptoCurrencyTeller\static\plot2.png',dpi=500)
    pyplot.close()
    return render(request,'home2.html',{'data':data})


hp3>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views

urlpatterns=[
    path('',views.Ripple,name='Ripple')
]

hp3>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render
import sqlite3
import os
import pandas
import sqlalchemy
from sklearn import linear_model
from selenium import webdriver
from time import sleep

from matplotlib import pyplot
import io
import urllib,base64

# Create your views here.
def Ripple(request):
    os.chdir(r'C:\Users\mohan\Desktop')
    engine = sqlalchemy.create_engine('sqlite:///crypto.db')
    xrp=pandas.read_sql('coin_XRP',engine)
    xrp=pandas.DataFrame({'Symbol':'XRP','High':xrp['High'],'Low':xrp['Low'],'Open':xrp['Open'],'Volume':xrp['Volume'],'Marketcap':xrp['Marketcap']})
    xrp.to_sql('coin_XRP',engine,if_exists='replace',index=False)
    
    reg3 = linear_model.LinearRegression()
    reg3= reg3.fit(xrp[['Low', 'Open', 'Volume', 'Marketcap']],xrp.High)

    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/xrp/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[1]/div[1]/div/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')


    driver.get("https://in.investing.com/crypto/xrp/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')

    driver.get("https://coinmarketcap.com/currencies/xrp/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/xrp/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')
    
    driver.close()
    
    k=[t1,t2,t3,t4]
    data=float(reg3.predict([k]))

    from matplotlib import pyplot
    pyplot.plot(range(1,11),list(xrp.tail(10)['High'].to_numpy()),label="Ripple's performance",marker='o',markerfacecolor='blue')
    pyplot.title("Ripple's performance over last 10 days:")
    pyplot.ylabel('Price ($)')
    pyplot.xlabel('Days')
    pyplot.grid(True,linewidth=1,linestyle='-.')
    pyplot.legend(loc='upper right')
    pyplot.savefig(r'C:\Users\mohan\Desktop\CryptoCurrencyTeller\CryptoCurrencyTeller\static\plot3.png',dpi=500)
    pyplot.close()

    return render(request,'home3.html',{'data':data})
hp4>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views

urlpatterns=[
    path('',views.Aave,name='Aave')
]

hp4>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render

# Create your views here.
from django.shortcuts import render
import sqlite3
import os
import pandas
import sqlalchemy
from sklearn import linear_model
from selenium import webdriver
from time import sleep

from matplotlib import pyplot
import io
import urllib,base64
# Create your views here.
def Aave(request):
    os.chdir(r'C:\Users\mohan\Desktop')
    engine = sqlalchemy.create_engine('sqlite:///crypto.db')
    aave=pandas.read_sql('coin_Aave',engine)
    aave=pandas.DataFrame({'Symbol':'AAVE','High':aave['High'],'Low':aave['Low'],'Open':aave['Open'],'Volume':aave['Volume'],'Marketcap':aave['Marketcap']})
    aave.to_sql('coin_Aave',engine,if_exists='replace',index=False)
    
    reg4 = linear_model.LinearRegression()
    reg4= reg4.fit(aave[['Low', 'Open', 'Volume', 'Marketcap']],aave.High)
    
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/aave/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/aave/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/aave/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/aave/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')
    
    
    driver.close()
    k=[t1,t2,t3,t4]
    data=float(reg4.predict([k]))
      
    from matplotlib import pyplot
    pyplot.plot(range(1,11),list(aave.tail(10)['High'].to_numpy()),label="Avalanche's performance",marker='o',markerfacecolor='blue')
    pyplot.title("Aave's performance over last 10 days:")
    pyplot.ylabel('Price ($)')
    pyplot.xlabel('Days')
    pyplot.grid(True,linewidth=1,linestyle='-.')
    pyplot.legend(loc='upper right')
    pyplot.savefig(r'C:\Users\mohan\Desktop\CryptoCurrencyTeller\CryptoCurrencyTeller\static\plot4.png',dpi=500)
    pyplot.close()
    return render(request,'home4.html',{'data':data})
    
hp5>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views

urlpatterns=[
    path('',views.Dogecoin,name='Dogecoin')
]

hp5>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 
from django.shortcuts import render
import sqlite3
import os
import pandas
import sqlalchemy
from sklearn import linear_model
from selenium import webdriver
from time import sleep

from matplotlib import pyplot
import io
import urllib,base64
# Create your views here.
def Dogecoin(request):
    os.chdir(r'C:\Users\mohan\Desktop')
    engine = sqlalchemy.create_engine('sqlite:///crypto.db')
    doge=pandas.read_sql('coin_Dogecoin',engine)
    doge=pandas.DataFrame({'Symbol':'DOGE','High':doge['High'],'Low':doge['Low'],'Open':doge['Open'],'Volume':doge['Volume'],'Marketcap':doge['Marketcap']})
    doge.to_sql('coin_Dogecoin',engine,if_exists='replace',index=False)
    
    reg5=linear_model.LinearRegression()
    reg5.fit(doge[['Low', 'Open', 'Volume', 'Marketcap']],doge.High)
    
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/dogecoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/dogecoin/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/dogecoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/dogecoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')
    
    
    driver.close()
    k=[t1,t2,t3,t4]
    data=float(reg5.predict([k]))
      
    from matplotlib import pyplot
    pyplot.plot(range(1,11),list(doge.tail(10)['High'].to_numpy()),label="Dogecoin's performance",marker='o',markerfacecolor='blue')
    pyplot.title("Dogecoin's performance over last 10 days:")
    pyplot.ylabel('Price ($)')
    pyplot.xlabel('Days')
    pyplot.grid(True,linewidth=1,linestyle='-.')
    pyplot.legend(loc='upper right')
    pyplot.savefig(r'C:\Users\mohan\Desktop\CryptoCurrencyTeller\CryptoCurrencyTeller\static\plot5.png',dpi=500)
    
    pyplot.close()
    return render(request,'home5.html',{'data':data})
p1>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views


urlpatterns=[
    path('',views.pBit,name='pBit')
]


p1>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from sklearn import linear_model
from time import sleep
import os
from django.shortcuts import render,HttpResponse
import sqlite3
from sklearn import linear_model
from selenium import webdriver
import pandas
import sqlalchemy


def pBit(request):
    
    os.chdir(r'C:\Users\mohan\Desktop')
    engine=sqlalchemy.create_engine('sqlite:///crypto.db')
    btc=pandas.read_sql('coin_Bitcoin',engine)
    btc=pandas.DataFrame({'Symbol':'BTC','High':btc['High'],'Low':btc['Low'],'Open':btc['Open'],'Volume':btc['Volume'],'Marketcap':btc['Marketcap']})

    reg=linear_model.LinearRegression()
    reg.fit(btc[['Low', 'Open', 'Volume', 'Marketcap']],btc.High)
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/bitcoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/bitcoin/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/bitcoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/bitcoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')

    driver.close()

    k=[t1,t2,t3,t4]
    data=float(reg.predict([k]))
    driver=webdriver.Chrome()
    driver.get("https://www.binance.com/en/trade/BTC_USDT?layout=basic")
    driver.maximize_window()
    sleep(120)
    
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.CONTROL+"a")
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.DELETE)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(data)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[2]/div/div/input").send_keys(2)
    sleep(5)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/button").click()
    sleep(5)
    driver.close()
    return render(request,'home.html')

p2>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views


urlpatterns=[
    path('',views.pEth,name='pEth')
]

p2>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from sklearn import linear_model
from time import sleep
import os
from django.shortcuts import render,HttpResponse
import sqlite3
from sklearn import linear_model
from selenium import webdriver
import pandas
import sqlalchemy


def pEth(request):
    
    os.chdir(r'C:\Users\mohan\Desktop')
    engine=sqlalchemy.create_engine('sqlite:///crypto.db')
    btc=pandas.read_sql('coin_Ethereum',engine)
    btc=pandas.DataFrame({'Symbol':'ETH','High':btc['High'],'Low':btc['Low'],'Open':btc['Open'],'Volume':btc['Volume'],'Marketcap':btc['Marketcap']})
  
    reg=linear_model.LinearRegression()
    reg.fit(btc[['Low', 'Open', 'Volume', 'Marketcap']],btc.High)
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/ethereum/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/ethereum/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/ethereum/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/ethereum/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')

    driver.close()

    k=[t1,t2,t3,t4]
    data=float(reg.predict([k]))
    driver=webdriver.Chrome()
    driver.get("https://www.binance.com/en/trade/ETH_USDT?layout=basic")
    driver.maximize_window()
    sleep(120)
    
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.CONTROL+"a")
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.DELETE)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(data)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[2]/div/div/input").send_keys(2)
    sleep(1)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/button").click()
    
    return render(request,'home.html')

p3>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views


urlpatterns=[
    path('',views.pXrp,name='pXrp')
]

p3>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from sklearn import linear_model
from time import sleep
import os
from django.shortcuts import render,HttpResponse
import sqlite3
from sklearn import linear_model
from selenium import webdriver
import pandas
import sqlalchemy


def pXrp(request):
    
    os.chdir(r'C:\Users\mohan\Desktop')
    engine=sqlalchemy.create_engine('sqlite:///crypto.db')
    btc=pandas.read_sql('coin_XRP',engine)
    btc=pandas.DataFrame({'Symbol':'XRP','High':btc['High'],'Low':btc['Low'],'Open':btc['Open'],'Volume':btc['Volume'],'Marketcap':btc['Marketcap']})
    
    reg=linear_model.LinearRegression()
    reg.fit(btc[['Low', 'Open', 'Volume', 'Marketcap']],btc.High)
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/xrp/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/xrp/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/xrp/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/xrp/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')

    driver.close()

    k=[t1,t2,t3,t4]
    data=float(reg.predict([k]))
    driver=webdriver.Chrome()
    driver.get("https://www.binance.com/en/trade/XRP_USDT?layout=basic")
    driver.maximize_window()
    sleep(120)
    
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.CONTROL+"a")
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.DELETE)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(data)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[2]/div/div/input").send_keys(2)
    sleep(1)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/button").click()
    
    return render(request,'home.html')


p4>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


from django.urls import path
from . import views


urlpatterns=[
    path('',views.pAave,name='pAave')
]

p4>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from sklearn import linear_model
from time import sleep
import os
from django.shortcuts import render,HttpResponse
import sqlite3
from sklearn import linear_model
from selenium import webdriver
import pandas
import sqlalchemy


def pAave(request):
    
    os.chdir(r'C:\Users\mohan\Desktop')
    engine=sqlalchemy.create_engine('sqlite:///crypto.db')
    btc=pandas.read_sql('coin_Aave',engine)
    btc=pandas.DataFrame({'Symbol':'AAVE','High':btc['High'],'Low':btc['Low'],'Open':btc['Open'],'Volume':btc['Volume'],'Marketcap':btc['Marketcap']})
   
    reg=linear_model.LinearRegression()
    reg.fit(btc[['Low', 'Open', 'Volume', 'Marketcap']],btc.High)
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/aave/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/aave/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/aave/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/aave/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')

    driver.close()

    k=[t1,t2,t3,t4]
    data=float(reg.predict([k]))
    driver=webdriver.Chrome()
    driver.get("https://www.binance.com/en/trade/AAVE_USDT?layout=basic")
    driver.maximize_window()
    sleep(120)
    
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.CONTROL+"a")
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.DELETE)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(data)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[2]/div/div/input").send_keys(2)
    sleep(1)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/button").click()
    
    return render(request,'home.html')


p5>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


from django.urls import path
from . import views


urlpatterns=[
    path('',views.pDoge,name='pDoge')
]

p5>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from sklearn import linear_model
from time import sleep
import os
from django.shortcuts import render,HttpResponse
import sqlite3
from sklearn import linear_model
from selenium import webdriver
import pandas
import sqlalchemy


def pDoge(request):
    
    os.chdir(r'C:\Users\mohan\Desktop')
    engine=sqlalchemy.create_engine('sqlite:///crypto.db')
    btc=pandas.read_sql('coin_Dogecoin',engine)
    btc=pandas.DataFrame({'Symbol':'DOGE','High':btc['High'],'Low':btc['Low'],'Open':btc['Open'],'Volume':btc['Volume'],'Marketcap':btc['Marketcap']})
   
    reg=linear_model.LinearRegression()
    reg.fit(btc[['Low', 'Open', 'Volume', 'Marketcap']],btc.High)
    options=webdriver.ChromeOptions()
    options.headless=True
    
    driver=webdriver.Chrome(options= options)
    driver.get("https://coinmarketcap.com/currencies/dogecoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[1]/div[2]/div/div[2]/div[3]/div[1]/span[2]/span").text
    t=t.replace('$','')
    t1=t.replace(',','')
    

    driver.get("https://in.investing.com/crypto/dogecoin/historical-data")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div[5]/section/div[7]/div[3]/table[1]/tbody/tr[1]/td[3]").text
    t=t.replace('$','')
    t2=t.replace(',','')
    

    driver.get("https://coinmarketcap.com/currencies/dogecoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[3]/div[1]/div[2]/div").text
    t=t.replace('$','')
    t3=t.replace(',','')


    driver.get("https://coinmarketcap.com/currencies/dogecoin/")
    sleep(2)
    t=driver.find_element_by_xpath("/html/body/div/div[1]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[1]/div[1]/div/div[2]/div").text
    t=t.replace('$','')
    t4=t.replace(',','')

    driver.close()

    k=[t1,t2,t3,t4]
    data=float(reg.predict([k]))
    driver=webdriver.Chrome()
    driver.get("https://www.binance.com/en/trade/DOGE_USDT?layout=basic")
    driver.maximize_window()
    sleep(120)
    
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.CONTROL+"a")
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(Keys.DELETE)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[1]/div/div/input").send_keys(data)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/div/div[2]/div/div/input").send_keys(2)
    sleep(1)
    driver.find_element_by_xpath("/html/body/div[1]/div/div/div[5]/div/div[1]/div[2]/div/div/div[3]/div[2]/form/button").click()
    
    return render(request,'home.html')

u1>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views


urlpatterns=[
    path('',views.upBit,name='upBit')
]

u1>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render,HttpResponse
import sqlalchemy
import sqlite3
import pandas
from sklearn import linear_model
import os
import numpy
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from time import sleep

from matplotlib import pyplot

# Create your views here.
def upBit(request):
        os.chdir(r'C:\Users\mohan\Desktop')
        engine=sqlalchemy.create_engine('sqlite:///crypto.db')    
     
        options=webdriver.ChromeOptions()
        options.headless=True
    
        driver=webdriver.Chrome(options= options)
        driver.get("https://coinmarketcap.com/currencies/bitcoin/historical-data/")
        driver.maximize_window()
        driver.execute_script("window.scrollBy(0,500)","")
        sleep(2)
        
        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[3]").text
        t=t.replace('$','')
        t1=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[4]").text
        t=t.replace('$','')
        t2=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[2]").text
        t=t.replace('$','')
        t3=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[6]").text
        t=t.replace('$','')
        t4=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[7]").text
        t=t.replace('$','')
        t5=float(t.replace(',',''))
        

        driver.close()
        l=pandas.read_sql('coin_Bitcoin',engine).tail(1)
        btc=pandas.DataFrame({'Symbol':'BTC','High':t1,'Low':t2,'Open':t3,'Volume':t4,'Marketcap':t5},index=[0])
        m=btc.to_numpy()
        l=l.to_numpy()
        if(l.all()!=m.all()):
            btc.to_sql('coin_Bitcoin',engine,if_exists='append',index=False)
        
        return render(request,'home.html')
    
u2>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views


urlpatterns=[
    path('',views.upEth,name='upEth')
]

u2>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



from django.shortcuts import render,HttpResponse
import sqlalchemy
import sqlite3
import pandas
from sklearn import linear_model
import os
import numpy
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from time import sleep

from matplotlib import pyplot

# Create your views here.
def upEth(request):
        os.chdir(r'C:\Users\mohan\Desktop')
        engine=sqlalchemy.create_engine('sqlite:///crypto.db')    
     
        options=webdriver.ChromeOptions()
        options.headless=True
    
        driver=webdriver.Chrome(options= options)
        driver.get("https://coinmarketcap.com/currencies/ethereum/historical-data/")
        driver.maximize_window()
        driver.execute_script("window.scrollBy(0,500)","")
        sleep(2)
        
        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[3]").text
        t=t.replace('$','')
        t1=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[4]").text
        t=t.replace('$','')
        t2=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[2]").text
        t=t.replace('$','')
        t3=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[6]").text
        t=t.replace('$','')
        t4=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[7]").text
        t=t.replace('$','')
        t5=float(t.replace(',',''))
        

        driver.close()
        l=pandas.read_sql('coin_Ethereum',engine).tail(1)
        eth=pandas.DataFrame({'Symbol':'ETH','High':t1,'Low':t2,'Open':t3,'Volume':t4,'Marketcap':t5},index=[0])
        m=eth.to_numpy()
        l=l.to_numpy()
        if(l.all()!=m.all()):
            eth.to_sql('coin_Ethereum',engine,if_exists='append',index=False)
        
        return render(request,'home.html')
    
u3>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


from django.urls import path
from . import views


urlpatterns=[
    path('',views.upXrp,name='upXrp')
]

u3>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render,HttpResponse
import sqlalchemy
import sqlite3
import pandas
from sklearn import linear_model
import os
import numpy
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from time import sleep

from matplotlib import pyplot

# Create your views here.
def upXrp(request):
        os.chdir(r'C:\Users\mohan\Desktop')
        engine=sqlalchemy.create_engine('sqlite:///crypto.db')    
     
        options=webdriver.ChromeOptions()
        options.headless=True
    
        driver=webdriver.Chrome(options= options)
        driver.get("https://coinmarketcap.com/currencies/xrp/historical-data/")
        driver.maximize_window()
        driver.execute_script("window.scrollBy(0,500)","")
        sleep(2)
        
        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[3]").text
        t=t.replace('$','')
        t1=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[4]").text
        t=t.replace('$','')
        t2=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[2]").text
        t=t.replace('$','')
        t3=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[6]").text
        t=t.replace('$','')
        t4=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[7]").text
        t=t.replace('$','')
        t5=float(t.replace(',',''))
        

        driver.close()
        l=pandas.read_sql('coin_XRP',engine).tail(1)
        xrp=pandas.DataFrame({'Symbol':'XRP','High':t1,'Low':t2,'Open':t3,'Volume':t4,'Marketcap':t5},index=[0])
        m=xrp.to_numpy()
        l=l.to_numpy()
        if(l.all()!=m.all()):
            xrp.to_sql('coin_XRP',engine,if_exists='append',index=False)
        
        return render(request,'home.html')
    

u4>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.urls import path
from . import views


urlpatterns=[
    path('',views.upAave,name='upAave')
]


u4>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render,HttpResponse
import sqlalchemy
import sqlite3
import pandas
from sklearn import linear_model
import os
import numpy
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from time import sleep

from matplotlib import pyplot

# Create your views here.
def upAave(request):
        os.chdir(r'C:\Users\mohan\Desktop')
        engine=sqlalchemy.create_engine('sqlite:///crypto.db')    
     
        options=webdriver.ChromeOptions()
        options.headless=True
    
        driver=webdriver.Chrome(options= options)
        driver.get("https://coinmarketcap.com/currencies/aave/historical-data/")
        driver.maximize_window()
        driver.execute_script("window.scrollBy(0,500)","")
        sleep(2)
        
        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[3]").text
        t=t.replace('$','')
        t1=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[4]").text
        t=t.replace('$','')
        t2=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[2]").text
        t=t.replace('$','')
        t3=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[6]").text
        t=t.replace('$','')
        t4=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[7]").text
        t=t.replace('$','')
        t5=float(t.replace(',',''))
        

        driver.close()
        l=pandas.read_sql('coin_Aave',engine).tail(1)
        aave=pandas.DataFrame({'Symbol':'AAVE','High':t1,'Low':t2,'Open':t3,'Volume':t4,'Marketcap':t5},index=[0])
        m=aave.to_numpy()
        l=l.to_numpy()
        if(l.all()!=m.all()):
            aave.to_sql('coin_Aave',engine,if_exists='append',index=False)
        
        return render(request,'home.html')
    
u5>>urls.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


from django.urls import path
from . import views


urlpatterns=[
    path('',views.upDoge,name='upDoge')
]

u5>>views.py>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

from django.shortcuts import render,HttpResponse
import sqlalchemy
import sqlite3
import pandas
from sklearn import linear_model
import os
import numpy
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from time import sleep

from matplotlib import pyplot

# Create your views here.
def upDoge(request):
        os.chdir(r'C:\Users\mohan\Desktop')
        engine=sqlalchemy.create_engine('sqlite:///crypto.db')    
     
        options=webdriver.ChromeOptions()
        options.headless=True
    
        driver=webdriver.Chrome(options= options)
        driver.get("https://coinmarketcap.com/currencies/dogecoin/historical-data/")
        driver.maximize_window()
        driver.execute_script("window.scrollBy(0,500)","")
        sleep(2)
        
        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[3]").text
        t=t.replace('$','')
        t1=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[4]").text
        t=t.replace('$','')
        t2=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[2]").text
        t=t.replace('$','')
        t3=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[6]").text
        t=t.replace('$','')
        t4=float(t.replace(',',''))

        t=driver.find_element_by_xpath("/html/body/div/div[1]/div[1]/div[2]/div/div[3]/div/div/div[2]/table/tbody/tr[1]/td[7]").text
        t=t.replace('$','')
        t5=float(t.replace(',',''))
        

        driver.close()
        l=pandas.read_sql('coin_Dogecoin',engine).tail(1)
        btc=pandas.DataFrame({'Symbol':'DOGE','High':t1,'Low':t2,'Open':t3,'Volume':t4,'Marketcap':t5},index=[0])
        m=btc.to_numpy()
        l=l.to_numpy()
        if(l.all()!=m.all()):
            btc.to_sql('coin_Dogecoin',engine,if_exists='append',index=False)
        
        return render(request,'home.html')
    





















